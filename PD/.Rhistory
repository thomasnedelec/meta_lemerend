install.packages("stringr", repos = "https://cloud.r-project.org", quiet=TRUE)
library(stringr)
install.packages("tidyverse", repos = "https://cloud.r-project.org", quiet=TRUE,dependencies=TRUE)
library(meta)
library(dplyr)
library(ggplot2)
df <- read.csv("df_2_5_final.csv",
header = TRUE,
na.strings=c("","NA"),
sep = ",")
df
nb_features <- nrow(df)
headers <- c("final_name", "code", "nb_total", "odd_ratio", "low_odd_ratio", "high_odd_ratio","p_value")
result_meta_analysis <- as.data.frame(matrix(, ncol = 7, nrow = 0))
names(result_meta_analysis) <- headers
# Niveau de significativité ajusté pour les comparaisons multiples
alpha_adjusted <- 0.05 / nb_features
z_value <- qnorm(1 - alpha_adjusted / 2)  # Valeur critique pour le seuil ajusté
for (row in 1:nrow(df)) {
std_fr <- df[row,'std_FR']
coeff_fr <- df[row,'coeff_FR']
std_sw <- df[row,'std_SW']
coeff_sw <- df[row,'coeff_SW']
nb_total <- (df[row,'n_SW']+df[row,'n_FR'])/2
studies <- c('fr','sw')
print(df[row,'final_name'])
print(studies)
coeffs <- c(coeff_fr,coeff_sw)
print(coeffs)
std <- c(std_fr,std_sw)
print(std)
data_studies <- data.frame(studies,coeffs,std)
# Méta-analyse avec la méthode DL pour l'intervalle de confiance
metaanalyse <- metagen(data_studies$coeffs, data_studies$std, method.tau = "DL")
final_name <- df[row, 'final_name']
code <- df[row, 'code']
odd_ratio <- exp(metaanalyse$TE.random)
# Appliquer la correction de Bonferroni sur l'intervalle de confiance
low_odd_ratio <- exp(metaanalyse$TE.random - z_value * metaanalyse$seTE.random)
high_odd_ratio <- exp(metaanalyse$TE.random + z_value * metaanalyse$seTE.random)
# Récupérer la p-value directement à partir de l'objet metagen
p_value <- metaanalyse$pval.random
de <- data.frame(final_name, code, nb_total, odd_ratio, low_odd_ratio, high_odd_ratio,p_value)
names(de) <- headers
result_meta_analysis <- rbind(result_meta_analysis, de)
}
# Export des résultats
write.csv(result_meta_analysis, 'result_meta_analysis_R_5_10.csv')
result_meta_analysis
nb_features <- nrow(df)
headers <- c("final_name", "code", "nb_total", "odd_ratio", "low_odd_ratio", "high_odd_ratio","p_value")
result_meta_analysis <- as.data.frame(matrix(, ncol = 7, nrow = 0))
names(result_meta_analysis) <- headers
# Niveau de significativité ajusté pour les comparaisons multiples
alpha_adjusted <- 0.05 / nb_features
z_value <- qnorm(1 - alpha_adjusted / 2)  # Valeur critique pour le seuil ajusté
for (row in 1:nrow(df)) {
std_fr <- df[row,'std_FR']
coeff_fr <- df[row,'coeff_FR']
std_sw <- df[row,'std_SW']
coeff_sw <- df[row,'coeff_SW']
nb_total <- (df[row,'n_SW']+df[row,'n_FR'])/2
studies <- c('fr','sw')
print(df[row,'final_name'])
print(studies)
coeffs <- c(coeff_fr,coeff_sw)
print(coeffs)
std <- c(std_fr,std_sw)
print(std)
data_studies <- data.frame(studies,coeffs,std)
# Méta-analyse avec la méthode DL pour l'intervalle de confiance
metaanalyse <- metagen(data_studies$coeffs, data_studies$std, method.tau = "DL")
final_name <- df[row, 'final_name']
code <- df[row, 'code']
odd_ratio <- exp(metaanalyse$TE.random)
# Appliquer la correction de Bonferroni sur l'intervalle de confiance
low_odd_ratio <- exp(metaanalyse$TE.random - z_value * metaanalyse$seTE.random)
high_odd_ratio <- exp(metaanalyse$TE.random + z_value * metaanalyse$seTE.random)
# Récupérer la p-value directement à partir de l'objet metagen
p_value <- metaanalyse$pval.random
de <- data.frame(final_name, code, nb_total, odd_ratio, low_odd_ratio, high_odd_ratio,p_value)
names(de) <- headers
result_meta_analysis <- rbind(result_meta_analysis, de)
}
# Export des résultats
write.csv(result_meta_analysis, 'result_meta_analysis_R_2_5.csv')
result_meta_analysis
df <- read.csv("df_2_5_als_final.csv",
header = TRUE,
na.strings=c("","NA"),
sep = ",")
df
nb_features <- nrow(df)
headers <- c("final_name", "code", "nb_total", "odd_ratio", "low_odd_ratio", "high_odd_ratio","p_value")
result_meta_analysis <- as.data.frame(matrix(, ncol = 7, nrow = 0))
names(result_meta_analysis) <- headers
# Niveau de significativité ajusté pour les comparaisons multiples
alpha_adjusted <- 0.05 / nb_features
z_value <- qnorm(1 - alpha_adjusted / 2)  # Valeur critique pour le seuil ajusté
for (row in 1:nrow(df)) {
std_fr <- df[row,'std_FR']
coeff_fr <- df[row,'coeff_FR']
std_uk <- df[row,'std_AUS']
coeff_uk <- df[row,'coeff_AUS']
std_sw <- df[row,'std_SW']
coeff_sw <- df[row,'coeff_SW']
nb_total <- (df[row,'n_SW']+df[row,'n_FR']+df[row,'n_AUS'])/3
studies <- c('fr','uk','aus')
print(df[row,'final_name'])
print(studies)
coeffs <- c(coeff_fr,coeff_uk,coeff_sw)
print(coeffs)
std <- c(std_fr,std_uk,std_sw)
print(std)
data_studies <- data.frame(studies,coeffs,std)
# Méta-analyse avec la méthode DL pour l'intervalle de confiance
metaanalyse <- metagen(data_studies$coeffs, data_studies$std, method.tau = "DL")
final_name <- df[row, 'final_name']
code <- df[row, 'code']
odd_ratio <- exp(metaanalyse$TE.random)
# Appliquer la correction de Bonferroni sur l'intervalle de confiance
low_odd_ratio <- exp(metaanalyse$TE.random - z_value * metaanalyse$seTE.random)
high_odd_ratio <- exp(metaanalyse$TE.random + z_value * metaanalyse$seTE.random)
# Récupérer la p-value directement à partir de l'objet metagen
p_value <- metaanalyse$pval.random
# Créer la ligne des résultats avec la p-value
de <- data.frame(final_name, code, nb_total, odd_ratio, low_odd_ratio, high_odd_ratio, p_value)
names(de) <- headers
result_meta_analysis <- rbind(result_meta_analysis, de)
}
# Export des résultats
write.csv(result_meta_analysis, 'result_meta_analysis_als_R_2_5.csv')
result_meta_analysis
install.packages("stringr", repos = "https://cloud.r-project.org", quiet=TRUE)
library(stringr)
install.packages("tidyverse", repos = "https://cloud.r-project.org", quiet=TRUE,dependencies=TRUE)
library(meta)
library(dplyr)
library(ggplot2)
install.packages("stringr", repos = "https://cloud.r-project.org", quiet = TRUE)
df <- read.csv("df_2_5_final.csv",
header = TRUE,
na.strings=c("","NA"),
sep = ",")
df
nb_features <- nrow(df)
headers <- c("final_name", "code", "nb_total", "odd_ratio", "low_odd_ratio", "high_odd_ratio","p_value")
result_meta_analysis <- as.data.frame(matrix(, ncol = 7, nrow = 0))
names(result_meta_analysis) <- headers
# Niveau de significativité ajusté pour les comparaisons multiples
alpha_adjusted <- 0.05 / nb_features
z_value <- qnorm(1 - alpha_adjusted / 2)  # Valeur critique pour le seuil ajusté
for (row in 1:nrow(df)) {
std_fr <- df[row, 'std_FR']
coeff_fr <- df[row, 'coeff_FR']
std_uk <- df[row, 'std_UK']
coeff_uk <- df[row, 'coeff_UK']
std_sw <- df[row, 'std_SW']
coeff_sw <- df[row, 'coeff_SW']
nb_total <- (df[row, 'n_SW'] + df[row, 'n_UK'] + df[row, 'n_FR']) / 3
studies <- c('fr', 'uk', 'sw')
coeffs <- c(coeff_fr, coeff_uk, coeff_sw)
std <- c(std_fr, std_uk, std_sw)
data_studies <- data.frame(studies, coeffs, std)
# Méta-analyse avec la méthode HK pour l'intervalle de confiance
metaanalyse <- metagen(data_studies$coeffs, data_studies$std, method.tau = "DL")
final_name <- df[row, 'final_name']
code <- df[row, 'code']
odd_ratio <- exp(metaanalyse$TE.random)
# Appliquer la correction de Bonferroni sur l'intervalle de confiance
low_odd_ratio <- exp(metaanalyse$TE.random - z_value * metaanalyse$seTE.random)
high_odd_ratio <- exp(metaanalyse$TE.random + z_value * metaanalyse$seTE.random)
# Récupérer la p-value directement à partir de l'objet metagen
p_value <- metaanalyse$pval.random
de <- data.frame(final_name, code, nb_total, odd_ratio, low_odd_ratio, high_odd_ratio,p_value)
names(de) <- headers
result_meta_analysis <- rbind(result_meta_analysis, de)
}
install.packages("stringr", repos = "https://cloud.r-project.org", quiet=TRUE)
library(stringr)
install.packages("tidyverse", repos = "https://cloud.r-project.org", quiet=TRUE,dependencies=TRUE)
library(meta)
library(dplyr)
library(ggplot2)
df <- read.csv("df_2_5_final.csv",
header = TRUE,
na.strings=c("","NA"),
sep = ",")
df
nb_features <- nrow(df)
headers <- c("final_name", "code", "nb_total", "odd_ratio", "low_odd_ratio", "high_odd_ratio","p_value")
result_meta_analysis <- as.data.frame(matrix(, ncol = 7, nrow = 0))
names(result_meta_analysis) <- headers
# Niveau de significativité ajusté pour les comparaisons multiples
alpha_adjusted <- 0.05 / nb_features
z_value <- qnorm(1 - alpha_adjusted / 2)  # Valeur critique pour le seuil ajusté
for (row in 1:nrow(df)) {
std_fr <- df[row, 'std_FR']
coeff_fr <- df[row, 'coeff_FR']
std_uk <- df[row, 'std_UK']
coeff_uk <- df[row, 'coeff_UK']
std_sw <- df[row, 'std_SW']
coeff_sw <- df[row, 'coeff_SW']
nb_total <- (df[row, 'n_SW'] + df[row, 'n_UK'] + df[row, 'n_FR']) / 3
studies <- c('fr', 'uk', 'sw')
coeffs <- c(coeff_fr, coeff_uk, coeff_sw)
std <- c(std_fr, std_uk, std_sw)
data_studies <- data.frame(studies, coeffs, std)
# Méta-analyse avec la méthode HK pour l'intervalle de confiance
metaanalyse <- metagen(data_studies$coeffs, data_studies$std, method.tau = "DL")
final_name <- df[row, 'final_name']
code <- df[row, 'code']
odd_ratio <- exp(metaanalyse$TE.random)
# Appliquer la correction de Bonferroni sur l'intervalle de confiance
low_odd_ratio <- exp(metaanalyse$TE.random - z_value * metaanalyse$seTE.random)
high_odd_ratio <- exp(metaanalyse$TE.random + z_value * metaanalyse$seTE.random)
# Récupérer la p-value directement à partir de l'objet metagen
p_value <- metaanalyse$pval.random
de <- data.frame(final_name, code, nb_total, odd_ratio, low_odd_ratio, high_odd_ratio,p_value)
names(de) <- headers
result_meta_analysis <- rbind(result_meta_analysis, de)
}
# Export des résultats
write.csv(result_meta_analysis, 'result_meta_analysis_R_5_10.csv')
result_meta_analysis
nb_features <- nrow(df)
headers <- c("final_name", "code", "nb_total", "odd_ratio", "low_odd_ratio", "high_odd_ratio","p_value")
result_meta_analysis <- as.data.frame(matrix(, ncol = 7, nrow = 0))
names(result_meta_analysis) <- headers
# Niveau de significativité ajusté pour les comparaisons multiples
alpha_adjusted <- 0.05 / nb_features
z_value <- qnorm(1 - alpha_adjusted / 2)  # Valeur critique pour le seuil ajusté
for (row in 1:nrow(df)) {
std_fr <- df[row, 'std_FR']
coeff_fr <- df[row, 'coeff_FR']
std_uk <- df[row, 'std_UK']
coeff_uk <- df[row, 'coeff_UK']
std_sw <- df[row, 'std_SW']
coeff_sw <- df[row, 'coeff_SW']
nb_total <- (df[row, 'n_SW'] + df[row, 'n_UK'] + df[row, 'n_FR']) / 3
studies <- c('fr', 'uk', 'sw')
coeffs <- c(coeff_fr, coeff_uk, coeff_sw)
std <- c(std_fr, std_uk, std_sw)
data_studies <- data.frame(studies, coeffs, std)
# Méta-analyse avec la méthode HK pour l'intervalle de confiance
metaanalyse <- metagen(data_studies$coeffs, data_studies$std, method.tau = "DL")
final_name <- df[row, 'final_name']
code <- df[row, 'code']
odd_ratio <- exp(metaanalyse$TE.random)
# Appliquer la correction de Bonferroni sur l'intervalle de confiance
low_odd_ratio <- exp(metaanalyse$TE.random - z_value * metaanalyse$seTE.random)
high_odd_ratio <- exp(metaanalyse$TE.random + z_value * metaanalyse$seTE.random)
# Récupérer la p-value directement à partir de l'objet metagen
p_value <- metaanalyse$pval.random
de <- data.frame(final_name, code, nb_total, odd_ratio, low_odd_ratio, high_odd_ratio,p_value)
names(de) <- headers
result_meta_analysis <- rbind(result_meta_analysis, de)
}
# Export des résultats
write.csv(result_meta_analysis, 'result_meta_analysis_R_2_5.csv')
result_meta_analysis
install.packages("stringr", repos = "https://cloud.r-project.org", quiet=TRUE)
library(stringr)
install.packages("tidyverse", repos = "https://cloud.r-project.org", quiet=TRUE,dependencies=TRUE)
install.packages("stringr", repos = "https://cloud.r-project.org", quiet=TRUE)
library(stringr)
install.packages("tidyverse", repos = "https://cloud.r-project.org", quiet=TRUE,dependencies=TRUE)
library(meta)
library(dplyr)
library(ggplot2)
df <- read.csv("temp/df_2_5_final.csv",
header = TRUE,
na.strings=c("","NA"),
sep = ",")
df
nb_features <- nrow(df)
headers <- c("final_name", "code", "nb_total", "odd_ratio", "low_odd_ratio", "high_odd_ratio","p_value")
result_meta_analysis <- as.data.frame(matrix(, ncol = 7, nrow = 0))
names(result_meta_analysis) <- headers
# Niveau de significativité ajusté pour les comparaisons multiples
alpha_adjusted <- 0.05 / nb_features
z_value <- qnorm(1 - alpha_adjusted / 2)  # Valeur critique pour le seuil ajusté
for (row in 1:nrow(df)) {
std_fr <- df[row,'std_FR']
coeff_fr <- df[row,'coeff_FR']
std_sw <- df[row,'std_SW']
coeff_sw <- df[row,'coeff_SW']
nb_total <- (df[row,'n_SW']+df[row,'n_FR'])/2
studies <- c('fr','sw')
print(df[row,'final_name'])
print(studies)
coeffs <- c(coeff_fr,coeff_sw)
print(coeffs)
std <- c(std_fr,std_sw)
print(std)
data_studies <- data.frame(studies,coeffs,std)
# Méta-analyse avec la méthode DL pour l'intervalle de confiance
metaanalyse <- metagen(data_studies$coeffs, data_studies$std, method.tau = "DL")
final_name <- df[row, 'final_name']
code <- df[row, 'code']
odd_ratio <- exp(metaanalyse$TE.random)
# Appliquer la correction de Bonferroni sur l'intervalle de confiance
low_odd_ratio <- exp(metaanalyse$TE.random - z_value * metaanalyse$seTE.random)
high_odd_ratio <- exp(metaanalyse$TE.random + z_value * metaanalyse$seTE.random)
# Récupérer la p-value directement à partir de l'objet metagen
p_value <- metaanalyse$pval.random
de <- data.frame(final_name, code, nb_total, odd_ratio, low_odd_ratio, high_odd_ratio,p_value)
names(de) <- headers
result_meta_analysis <- rbind(result_meta_analysis, de)
}
df <- read.csv("temp/df_2_5_final.csv",
header = TRUE,
na.strings=c("","NA"),
sep = ",")
df
nb_features <- nrow(df)
headers <- c("final_name", "code", "nb_total", "odd_ratio", "low_odd_ratio", "high_odd_ratio","p_value")
result_meta_analysis <- as.data.frame(matrix(, ncol = 7, nrow = 0))
names(result_meta_analysis) <- headers
# Niveau de significativité ajusté pour les comparaisons multiples
alpha_adjusted <- 0.05 / nb_features
z_value <- qnorm(1 - alpha_adjusted / 2)  # Valeur critique pour le seuil ajusté
for (row in 1:nrow(df)) {
std_fr <- df[row,'std_FR']
coeff_fr <- df[row,'coeff_FR']
std_sw <- df[row,'std_SW']
coeff_sw <- df[row,'coeff_SW']
nb_total <- (df[row,'n_SW']+df[row,'n_FR'])/2
studies <- c('fr','sw')
print(df[row,'final_name'])
print(studies)
coeffs <- c(coeff_fr,coeff_sw)
print(coeffs)
std <- c(std_fr,std_sw)
print(std)
data_studies <- data.frame(studies,coeffs,std)
# Méta-analyse avec la méthode DL pour l'intervalle de confiance
metaanalyse <- metagen(data_studies$coeffs, data_studies$std, method.tau = "DL")
final_name <- df[row, 'final_name']
code <- df[row, 'code']
odd_ratio <- exp(metaanalyse$TE.random)
# Appliquer la correction de Bonferroni sur l'intervalle de confiance
low_odd_ratio <- exp(metaanalyse$TE.random - z_value * metaanalyse$seTE.random)
high_odd_ratio <- exp(metaanalyse$TE.random + z_value * metaanalyse$seTE.random)
# Récupérer la p-value directement à partir de l'objet metagen
p_value <- metaanalyse$pval.random
de <- data.frame(final_name, code, nb_total, odd_ratio, low_odd_ratio, high_odd_ratio,p_value)
names(de) <- headers
result_meta_analysis <- rbind(result_meta_analysis, de)
}
# Export des résultats
write.csv(result_meta_analysis, 'temp/result_meta_analysis_R_2_5.csv')
result_meta_analysis
